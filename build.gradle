/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'dhakaran' at '7/14/16 4:05 PM' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url "http://www.eviware.com/repository/maven2" }
    
     mavenCentral()
     mavenLocal()
    jcenter()
}

  /*plugins {
    id "java"
    id "jacoco"
  } */
  
sourceSets {
    soapUiTest {
        java.srcDirs 'src/soapUiTest/java'
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
    }
    configurations {
    soapUiTestCompile.extendsFrom testCompile
    soapUiTestRuntime.extendsFrom testRuntime
   
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
} 

artifacts {
    archives javadocJar
    archives javadocJar
}
test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}
 task soapUiTest(type : Test) {
    description = 'Runs the SoapUi tests.'
    group = 'verification'
    classpath = sourceSets.soapUiTest.runtimeClasspath
    testClassesDir = sourceSets.soapUiTest.output.classesDir
    //testResultsDir = file("$testResultsDir/integration")

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat = 'full'
    }

    //If you want to ensure that integration tests are run every time when you invoke
    //this task, uncomment the following line.
    //outputs.upToDateWhen { false }
/*    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoIntegTest.exec")
    }*/
}   
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile( group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.5.3' )
     compile( group: 'com.jgoodies', name: 'forms', version: '1.1.0' )
    compile( group: 'com.smartbear.soapui', name: 'soapui', version: '5.2.1' )
    {
   exclude( module: 'jxbrowser' )
		exclude( module: 'comfyj' )
		exclude( module: 'winpack' )
		exclude( module: 'xulrunner-windows' )
		exclude( module: 'xulrunner-linux64' )
		exclude( module: 'xulrunner-linux' )
		exclude( module: 'xulrunner-mac' )
		exclude( module: 'MozillaInterfaces' )
		exclude( module: 'engine-gecko' )
		exclude( module: 'engine-gecko15' )
		exclude( module: 'engine-ie' )
		exclude( module: 'engine-webkit' )
		exclude( module: 'jniwrap' )
		exclude( module: 'xulrunner15-mac' )
		exclude( module: 'xulrunner15-windows' )
		exclude( module: 'looks' )
		exclude( module: 'binding' )
		exclude( module: 'jtidy' )
		exclude( module: 'cajo' )
		exclude( module: 'joda-time' )
		exclude( module: 'forms' )
    }
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
